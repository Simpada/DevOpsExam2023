on:
  push:
    branches:
      - '*'

jobs:
  build_and_push_to_ECR:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t simprekognition .

      - name: Tag and push to ECR with Hash
        if: github.ref == 'refs/heads/master'
        run: |
          rev=$(git rev-parse --short HEAD)
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          docker tag simprekognition 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private:${rev}
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private:${rev}

      - name: Tag and push to ECR with Latest
        if: github.ref == 'refs/heads/master'
        run: |
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 244530008913.dkr.ecr.eu-west-1.amazonaws.com
          docker tag simprekognition 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private:latest
          docker push 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private:latest

#  terraform:
#    name: "Terraform"
#    needs: build_and_push_to_ECR
#    runs-on: ubuntu-latest
#    env:
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      AWS_REGION: eu-west-1
#      ACCESS_ROLE: arn:aws:iam::244530008913:role/service-role/AppRunnerECRAccessRole
#      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/mama014-private:latest
#      POLICY_NAME: 2011-apr-policy
#      PORT: 8080
#      ROLE_NAME: Kandidat2011Sim
#      SERVICE_NAME: Kandidat2011Service
#    steps:
#      - uses: actions/checkout@v3



